/*!normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css*/
html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
}

main {
  display: block;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

pre {
  font-family: monospace, monospace;
  font-size: 1em;
}

a {
  background-color: initial;
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  text-decoration: underline dotted;
}

b,
strong {
  font-weight: bolder;
}

code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

img {
  border-style: none;
}

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}

progress {
  vertical-align: baseline;
}

textarea {
  overflow: auto;
}

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

details {
  display: block;
}

summary {
  display: list-item;
}

template {
  display: none;
}

[hidden] {
  display: none;
}

:root {
  --bg: #fff;
  --bg-bright: #eee;
  --fg: #111;
  --link: #00f;
  --code: #f00;
}

@media (prefers-reduced-motion: no-preference) {
  :root {
    scroll-behavior: smooth;
  }
}

body {
  background-color: var(--bg);
  color: var(--fg);
  font-family:
    -apple-system,
    BlinkMacSystemFont,
    avenir next,
    avenir,
    segoe ui,
    helvetica neue,
    helvetica,
    Cantarell,
    Ubuntu,
    roboto,
    noto,
    arial,
    sans-serif;
  font-size: 1rem;
  line-height: 1.5;
  max-width: 45em;
  margin: 0 auto;
  padding: 0 1rem;
}

.site-nav,
footer {
  border-color: var(--fg);
}

footer {
  border-top: 1px dotted;
  padding-top: 1rem;
  margin: 1rem 0;
}

footer p {
  font-size: 90%;
  margin: 0;
}

.site-nav {
  border-bottom: 1px dotted;
}

.site-nav ul {
  list-style-type: none;
  display: flex;
  align-items: center;
  padding: 0;
}

.site-nav ul li {
  margin-right: 0.5rem;
}

h1,
h2,
h3,
h4 {
  color: var(--fg);
}

a,
a:visited {
  color: var(--link);
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

img {
  width: 100%;
}

table {
  border-collapse: collapse;
  color: var(--fg);
  border-color: var(--bg-bright);
  font-family:
    Menlo,
    Consolas,
    Monaco,
    Liberation Mono,
    Lucida Console,
    monospace;
}

thead,
th,
tr,
td {
  border: 1px solid var(--bg-bright);
  padding: 0.25rem;
}

pre > code,
time,
code {
  font-family:
    Menlo,
    Consolas,
    Monaco,
    Liberation Mono,
    Lucida Console,
    monospace;
  font-size: 1rem;
}

pre {
  background-color: var(--bg-bright) !important;
  border-radius: 5px;
  margin: 0.5rem 0;
  padding: 0.5rem;
  overflow-x: auto;
}

:not(pre) > code {
  color: var(--code);
  font-family: inherit;
}

aside {
  background-color: var(--bg-bright);
  padding: 1rem;
}

blockquote {
  background-color: var(--bg-bright);
  border-left: 10px solid var(--link);
  border-radius: 5px;
  margin: 1rem 0;
  padding: 0.5rem 1rem;
}

blockquote p {
  margin: 0;
}

.post {
  display: flex;
}

.post time {
  flex-shrink: 0;
  margin-right: 0.5rem;
}

.post-metadata {
  border: 1px dotted var(--fg);
  border-top: none;
  padding: 1rem;
}

.post-metadata h1 {
  margin: 0;
}

.post-metadata p {
  margin: 0;
}

details {
  margin-top: 1rem;
}

summary {
  font-weight: 700;
}

.footnote-definition {
  display: flex;
  justify-content: flex-start;
  align-items: top;
  margin: 1rem 0;
}

.footnote-definition sup {
  font-size: inherit;
  top: 0;
  line-height: inherit;
  padding-right: 0.5rem;
}

.footnote-definition sup::after {
  content: ".";
}

.footnote-definition p {
  display: inline-block;
  margin: 0;
}

@media (prefers-color-scheme: dark) {
  :root {
    --bg: #111111;
    --bg-bright: #2a2a2a;
    --fg: #c9c9c9;
    --link: #f07178;
    --code: #ffb454;
  }
}

/* Org Styles */
p.verse {
  margin-left: 3%;
}
.timestamp {
  color: var(--bg-light);
}
.timestamp-kwd {
  color: var(--timestamp-kwd);
}
.org-right {
  margin-left: auto;
  margin-right: 0px;
  text-align: right;
}
.org-left {
  margin-left: 0px;
  margin-right: auto;
  text-align: left;
}
.org-center {
  margin-left: auto;
  margin-right: auto;
  text-align: center;
}
.underline {
  text-decoration: underline;
}
.todo {
  font-family: monospace;
  color: red;
}
.done {
  font-family: monospace;
  color: green;
}
.priority {
  font-family: monospace;
  color: orange;
}
.tag {
  background-color: #eee;
  font-family: monospace;
  padding: 2px;
  font-size: 80%;
  font-weight: normal;
}

.code-highlighted {
  background-color: var(--highlight);
}
.org-info-js_info-navigation {
  border-style: none;
}
#org-info-js_console-label {
  font-size: 10px;
  font-weight: bold;
  white-space: nowrap;
}
.org-info-js_search-highlight {
  background-color: var(--highlight);
  color: var(--fg);
  font-weight: bold;
}

caption.t-above {
  caption-side: top;
}
caption.t-bottom {
  caption-side: bottom;
}
td,
th {
  vertical-align: top;
}
th.org-right {
  text-align: center;
}
th.org-left {
  text-align: center;
}
th.org-center {
  text-align: center;
}
td.org-right {
  text-align: right;
}
td.org-left {
  text-align: left;
}
td.org-center {
  text-align: center;
}
dt {
  font-weight: bold;
}
.footpara {
  display: inline;
}
.footdef {
  margin-bottom: 1em;
}
.figure {
  padding: 1em;
}
.figure p {
  text-align: center;
}
.equation-container {
  display: table;
  text-align: center;
  width: 100%;
}
.equation {
  vertical-align: middle;
}
.equation-label {
  display: table-cell;
  text-align: right;
  vertical-align: middle;
}
.inlinetask {
  padding: 10px;
  border: 2px solid var(--bg);
  margin: 10px;
  background: var(--task);
}
#org-div-home-and-up {
  text-align: right;
  font-size: 70%;
  white-space: nowrap;
}

pre.src {
  position: relative;
  overflow: auto;
}
pre.src:before {
  display: none;
  position: absolute;
  top: -8px;
  right: 12px;
  padding: 3px;
  color: var(--fg);
  background-color: var(--bg-lightest-opac);
}
pre.src:hover:before {
  display: inline;
  margin-top: 14px;
}

/* Languages per Org manual */
pre.src-asymptote:before {
  content: "Asymptote";
}
pre.src-awk:before {
  content: "Awk";
}
pre.src-authinfo::before {
  content: "Authinfo";
}
pre.src-C:before {
  content: "C";
}
/* pre.src-C++ doesn't work in CSS */
pre.src-clojure:before {
  content: "Clojure";
}
pre.src-css:before {
  content: "CSS";
}
pre.src-D:before {
  content: "D";
}
pre.src-ditaa:before {
  content: "ditaa";
}
pre.src-dot:before {
  content: "Graphviz";
}
pre.src-calc:before {
  content: "Emacs Calc";
}
pre.src-emacs-lisp:before {
  content: "Emacs Lisp";
}
pre.src-fortran:before {
  content: "Fortran";
}
pre.src-gnuplot:before {
  content: "gnuplot";
}
pre.src-haskell:before {
  content: "Haskell";
}
pre.src-hledger:before {
  content: "hledger";
}
pre.src-java:before {
  content: "Java";
}
pre.src-js:before {
  content: "Javascript";
}
pre.src-latex:before {
  content: "LaTeX";
}
pre.src-ledger:before {
  content: "Ledger";
}
pre.src-lisp:before {
  content: "Lisp";
}
pre.src-lilypond:before {
  content: "Lilypond";
}
pre.src-lua:before {
  content: "Lua";
}
pre.src-matlab:before {
  content: "MATLAB";
}
pre.src-mscgen:before {
  content: "Mscgen";
}
pre.src-ocaml:before {
  content: "Objective Caml";
}
pre.src-octave:before {
  content: "Octave";
}
pre.src-org:before {
  content: "Org mode";
}
pre.src-oz:before {
  content: "OZ";
}
pre.src-plantuml:before {
  content: "Plantuml";
}
pre.src-processing:before {
  content: "Processing.js";
}
pre.src-python:before {
  content: "Python";
}
pre.src-R:before {
  content: "R";
}
pre.src-ruby:before {
  content: "Ruby";
}
pre.src-sass:before {
  content: "Sass";
}
pre.src-scheme:before {
  content: "Scheme";
}
pre.src-screen:before {
  content: "Gnu Screen";
}
pre.src-sed:before {
  content: "Sed";
}
pre.src-sh:before {
  content: "shell";
}
pre.src-sql:before {
  content: "SQL";
}
pre.src-sqlite:before {
  content: "SQLite";
}
/* additional languages in org.el's org-babel-load-languages alist */
pre.src-forth:before {
  content: "Forth";
}
pre.src-io:before {
  content: "IO";
}
pre.src-J:before {
  content: "J";
}
pre.src-makefile:before {
  content: "Makefile";
}
pre.src-maxima:before {
  content: "Maxima";
}
pre.src-perl:before {
  content: "Perl";
}
pre.src-picolisp:before {
  content: "Pico Lisp";
}
pre.src-scala:before {
  content: "Scala";
}
pre.src-shell:before {
  content: "Shell Script";
}
pre.src-ebnf2ps:before {
  content: "ebfn2ps";
}
/* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
pre.src-cpp:before {
  content: "C++";
}
pre.src-abc:before {
  content: "ABC";
}
pre.src-coq:before {
  content: "Coq";
}
pre.src-groovy:before {
  content: "Groovy";
}
/* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
pre.src-bash:before {
  content: "bash";
}
pre.src-csh:before {
  content: "csh";
}
pre.src-ash:before {
  content: "ash";
}
pre.src-dash:before {
  content: "dash";
}
pre.src-ksh:before {
  content: "ksh";
}
pre.src-mksh:before {
  content: "mksh";
}
pre.src-posh:before {
  content: "posh";
}
/* Additional Emacs modes also supported by the LaTeX listings package */
pre.src-ada:before {
  content: "Ada";
}
pre.src-asm:before {
  content: "Assembler";
}
pre.src-caml:before {
  content: "Caml";
}
pre.src-delphi:before {
  content: "Delphi";
}
pre.src-html:before {
  content: "HTML";
}
pre.src-idl:before {
  content: "IDL";
}
pre.src-mercury:before {
  content: "Mercury";
}
pre.src-metapost:before {
  content: "MetaPost";
}
pre.src-modula-2:before {
  content: "Modula-2";
}
pre.src-pascal:before {
  content: "Pascal";
}
pre.src-ps:before {
  content: "PostScript";
}
pre.src-prolog:before {
  content: "Prolog";
}
pre.src-simula:before {
  content: "Simula";
}
pre.src-tcl:before {
  content: "tcl";
}
pre.src-tex:before {
  content: "TeX";
}
pre.src-plain-tex:before {
  content: "Plain TeX";
}
pre.src-verilog:before {
  content: "Verilog";
}
pre.src-vhdl:before {
  content: "VHDL";
}
pre.src-xml:before {
  content: "XML";
}
pre.src-nxml:before {
  content: "XML";
}
/* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
pre.src-conf:before {
  content: "Configuration File";
}
